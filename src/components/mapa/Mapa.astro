---
import Geoloc from "./Geoloc.astro";
---

<div class="relative flex-1">
    <div class="absolute top-20 left-[10px] z-50 border-2 border-slate-400 rounded">
        <Geoloc />
    </div>
    <div id="map" class="absolute inset-0 z-0"></div>
    
    <!-- Debug panel -->
    <div id="debug-panel" class="absolute top-0 right-0 bg-black text-white p-2 text-xs z-50 max-w-xs">
        <div>üîß Debug Panel</div>
        <div id="debug-status">Iniciando...</div>
    </div>
</div>

<script>
    console.log("üó∫Ô∏è DEBUG - Script del mapa iniciado");
    
    function updateDebug(message) {
        const debugStatus = document.getElementById('debug-status');
        if (debugStatus) {
            debugStatus.innerHTML += '<br>' + message;
        }
        console.log("üó∫Ô∏è DEBUG:", message);
    }
    
    function esperarLeaflet(callback, intentos = 0) {
        updateDebug(`Intento ${intentos + 1} de cargar Leaflet...`);
        
        if (typeof L !== 'undefined') {
            updateDebug("‚úÖ Leaflet encontrado!");
            callback();
        } else if (intentos < 50) { // 5 segundos m√°ximo
            setTimeout(() => esperarLeaflet(callback, intentos + 1), 100);
        } else {
            updateDebug("‚ùå Timeout esperando Leaflet");
            console.error("‚ùå DEBUG - Leaflet no se pudo cargar despu√©s de 5 segundos");
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        updateDebug("DOM cargado, buscando contenedor...");
        
        const mapContainer = document.getElementById("map");
        if (!mapContainer) {
            updateDebug("‚ùå No se encontr√≥ contenedor #map");
            console.error("‚ùå DEBUG - No se encontr√≥ el contenedor del mapa");
            return;
        }
        
        updateDebug("‚úÖ Contenedor encontrado");
        updateDebug(`Dimensiones: ${mapContainer.offsetWidth}x${mapContainer.offsetHeight}`);
        
        esperarLeaflet(function() {
            try {
                updateDebug("Creando mapa...");
                
                // Crear el mapa
                let map = L.map("map", {
                    center: [40.4168, -3.7038],
                    zoom: 6,
                    zoomControl: true
                });
                
                updateDebug("‚úÖ Mapa creado");

                // A√±adir las tiles
                const tileLayer = L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> | <a href="https://eivillamuelas.com">eivillamuelas</a>',
                });

                tileLayer.addTo(map);
                updateDebug("‚úÖ Tiles a√±adidas");
                
                // Hacer el mapa global
                window.miMapa = map;
                updateDebug("‚úÖ Mapa disponible globalmente");

                // Evento cuando el mapa est√° listo
                map.whenReady(function () {
                    updateDebug("‚úÖ Mapa completamente listo!");
                    console.log("‚úÖ DEBUG - Mapa cargado correctamente");
                    window.dispatchEvent(new CustomEvent("mapaListo", { detail: map }));
                    
                    // Ocultar debug panel despu√©s de 5 segundos si todo va bien
                    setTimeout(() => {
                        const debugPanel = document.getElementById('debug-panel');
                        if (debugPanel) debugPanel.style.display = 'none';
                    }, 5000);
                });
                
                // Evento de error en tiles
                tileLayer.on('tileerror', function(error) {
                    updateDebug("‚ùå Error cargando tile: " + error.tile.src);
                });

            } catch (error) {
                updateDebug("‚ùå Error: " + error.message);
                console.error("‚ùå DEBUG - Error al crear el mapa:", error);
            }
        });
    });
</script>